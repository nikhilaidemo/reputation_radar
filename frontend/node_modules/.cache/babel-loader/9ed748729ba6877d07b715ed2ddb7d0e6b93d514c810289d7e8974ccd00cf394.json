{"ast":null,"code":"var _jsxFileName = \"C:\\\\reputation_radar\\\\frontend\\\\src\\\\pages\\\\AlertsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AlertsTable from '../components/AlertsTable';\nimport { alerts } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertsPage = () => {\n  _s();\n  const [allAlerts, setAllAlerts] = useState([]);\n  const [filterResolved, setFilterResolved] = useState('all'); // 'all', 'resolved', 'unresolved'\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchAlerts = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = {};\n      if (filterResolved === 'resolved') {\n        params.resolved = true;\n      } else if (filterResolved === 'unresolved') {\n        params.resolved = false;\n      }\n      const response = await alerts.getAlerts(params);\n      setAllAlerts(response.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)));\n    } catch (err) {\n      setError('Failed to fetch alerts.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAlerts();\n  }, [filterResolved]);\n  const handleResolveToggle = async (id, resolvedStatus) => {\n    try {\n      await alerts.resolveAlert(id, resolvedStatus);\n      setAllAlerts(prevAlerts => prevAlerts.map(alert => alert.id === id ? {\n        ...alert,\n        resolved: resolvedStatus\n      } : alert));\n    } catch (err) {\n      alert('Failed to update alert status.');\n      console.error(err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: \"Loading alerts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4 text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900\",\n      children: \"Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md flex items-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter-resolved\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"Filter by Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filter-resolved\",\n        className: \"mt-1 block w-48 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n        value: filterResolved,\n        onChange: e => setFilterResolved(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unresolved\",\n          children: \"Unresolved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"resolved\",\n          children: \"Resolved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertsTable, {\n      alerts: allAlerts,\n      onResolveToggle: handleResolveToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertsPage, \"YF9GlxNJkBtNXFw58GV9rMuinx0=\");\n_c = AlertsPage;\nexport default AlertsPage;\nvar _c;\n$RefreshReg$(_c, \"AlertsPage\");","map":{"version":3,"names":["React","useState","useEffect","AlertsTable","alerts","jsxDEV","_jsxDEV","AlertsPage","_s","allAlerts","setAllAlerts","filterResolved","setFilterResolved","loading","setLoading","error","setError","fetchAlerts","params","resolved","response","getAlerts","data","sort","a","b","Date","created_at","err","console","handleResolveToggle","id","resolvedStatus","resolveAlert","prevAlerts","map","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","onResolveToggle","_c","$RefreshReg$"],"sources":["C:/reputation_radar/frontend/src/pages/AlertsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AlertsTable from '../components/AlertsTable';\r\nimport { alerts } from '../api';\r\n\r\nconst AlertsPage = () => {\r\n  const [allAlerts, setAllAlerts] = useState([]);\r\n  const [filterResolved, setFilterResolved] = useState('all'); // 'all', 'resolved', 'unresolved'\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAlerts = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const params = {};\r\n      if (filterResolved === 'resolved') {\r\n        params.resolved = true;\r\n      } else if (filterResolved === 'unresolved') {\r\n        params.resolved = false;\r\n      }\r\n      const response = await alerts.getAlerts(params);\r\n      setAllAlerts(response.data.sort((a,b) => new Date(b.created_at) - new Date(a.created_at)));\r\n    } catch (err) {\r\n      setError('Failed to fetch alerts.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [filterResolved]);\r\n\r\n  const handleResolveToggle = async (id, resolvedStatus) => {\r\n    try {\r\n      await alerts.resolveAlert(id, resolvedStatus);\r\n      setAllAlerts(prevAlerts =>\r\n        prevAlerts.map(alert =>\r\n          alert.id === id ? { ...alert, resolved: resolvedStatus } : alert\r\n        )\r\n      );\r\n    } catch (err) {\r\n      alert('Failed to update alert status.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center p-4\">Loading alerts...</div>;\r\n  if (error) return <div className=\"text-center p-4 text-red-600\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h1 className=\"text-3xl font-bold text-gray-900\">Alerts</h1>\r\n\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md flex items-center space-x-4\">\r\n        <label htmlFor=\"filter-resolved\" className=\"block text-sm font-medium text-gray-700\">\r\n          Filter by Status:\r\n        </label>\r\n        <select\r\n          id=\"filter-resolved\"\r\n          className=\"mt-1 block w-48 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          value={filterResolved}\r\n          onChange={(e) => setFilterResolved(e.target.value)}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"unresolved\">Unresolved</option>\r\n          <option value=\"resolved\">Resolved</option>\r\n        </select>\r\n      </div>\r\n\r\n      <AlertsTable alerts={allAlerts} onResolveToggle={handleResolveToggle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}